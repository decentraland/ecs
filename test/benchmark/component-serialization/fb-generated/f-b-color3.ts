// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';



export class FBColor3 {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
__init(i:number, bb:flatbuffers.ByteBuffer):FBColor3 {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

r():number {
  return this.bb!.readFloat32(this.bb_pos);
}

g():number {
  return this.bb!.readFloat32(this.bb_pos + 4);
}

b():number {
  return this.bb!.readFloat32(this.bb_pos + 8);
}

static sizeOf():number {
  return 12;
}

static createFBColor3(builder:flatbuffers.Builder, r: number, g: number, b: number):flatbuffers.Offset {
  builder.prep(4, 12);
  builder.writeFloat32(b);
  builder.writeFloat32(g);
  builder.writeFloat32(r);
  return builder.offset();
}


unpack(): FBColor3T {
  return new FBColor3T(
    this.r(),
    this.g(),
    this.b()
  );
}


unpackTo(_o: FBColor3T): void {
  _o.r = this.r();
  _o.g = this.g();
  _o.b = this.b();
}
}

export class FBColor3T {
constructor(
  public r: number = 0.0,
  public g: number = 0.0,
  public b: number = 0.0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return FBColor3.createFBColor3(builder,
    this.r,
    this.g,
    this.b
  );
}
}
